services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - 32181:32181
      - 2888:2888
      - 3888:3888
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 32181
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - kafka-net
    logging:
      driver: json-file
      options:
        max-size: "1m"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      #- broker-4
    environment:
      KAFKA_CLUSTERS_0_NAME: broker-1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-1:29091
      KAFKA_CLUSTERS_0_METRICS_PORT: 19101
      KAFKA_CLUSTERS_1_NAME: broker-2
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: broker-2:29092
      KAFKA_CLUSTERS_1_METRICS_PORT: 19102
      KAFKA_CLUSTERS_2_NAME: broker-3
      KAFKA_CLUSTERS_2_BOOTSTRAPSERVERS: broker-3:29093
      KAFKA_CLUSTERS_2_METRICS_PORT: 19103
#      KAFKA_CLUSTERS_3_NAME: broker-4
#      KAFKA_CLUSTERS_3_BOOTSTRAPSERVERS: broker-4:29094
#      KAFKA_CLUSTERS_3_METRICS_PORT: 19104
      DYNAMIC_CONFIG_ENABLED: true
    networks:
        - kafka-net
    logging:
      driver: json-file
      options:
        max-size: "1m"

  broker-1:
    image: confluentinc/cp-kafka:7.6.1
    container_name: broker-1
    restart: unless-stopped
    ports:
      - 9091:9091
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-1:29091,EXTERNAL://localhost:9091
      KAFKA_SCHEMA_REGISTRY_URL: schema-registry:8081
      KAFKA_DEFAULT_REPLICATION_FACTOR: 4
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_JMX_PORT: 19101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -vz localhost 9091
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - kafka-net
    logging:
      driver: json-file
      options:
        max-size: "1m"

  broker-2:
    image: confluentinc/cp-kafka:7.6.1
    container_name: broker-2
    restart: unless-stopped
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-2:29092,EXTERNAL://localhost:9092
      KAFKA_SCHEMA_REGISTRY_URL: schema-registry:8081
      KAFKA_DEFAULT_REPLICATION_FACTOR: 4
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_JMX_PORT: 19102
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -vz localhost 9092
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - kafka-net
    logging:
      driver: json-file
      options:
        max-size: "1m"

  broker-3:
    image: confluentinc/cp-kafka:7.6.1
    container_name: broker-3
    restart: unless-stopped
    ports:
      - 9093:9093
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-3:29093,EXTERNAL://localhost:9093
      KAFKA_SCHEMA_REGISTRY_URL: schema-registry:8081
      KAFKA_DEFAULT_REPLICATION_FACTOR: 4
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_JMX_PORT: 19103
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -vz localhost 9093
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - kafka-net
    logging:
      driver: json-file
      options:
        max-size: "1m"

#  broker-4:
#    image: confluentinc/cp-kafka:latest
#    container_name: broker-4
#    restart: unless-stopped
#    ports:
#      - 9094:9094
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 4
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-4:29094,EXTERNAL://localhost:9094
#      KAFKA_SCHEMA_REGISTRY_URL: schema-registry:8081
#      KAFKA_DEFAULT_REPLICATION_FACTOR: 4
#      KAFKA_NUM_PARTITIONS: 4
#      KAFKA_JMX_PORT: 19104
#      KAFKA_JMX_HOSTNAME: localhost
#    healthcheck:
#      test: nc -vz localhost 9094
#      interval: 10s
#      timeout: 10s
#      retries: 3
#    networks:
#      - kafka-net
#    logging:
#      driver: json-file
#      options:
#        max-size: "1m"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - 8081:8081
    volumes:
      - ./scripts:/scripts
    environment:
      #SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker-2:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: none
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
    depends_on:
      - zookeeper
      - broker-1
      - broker-2
      - broker-3
      #- broker-4
    restart: unless-stopped
    networks:
      - kafka-net

  ksql-server:
    image: confluentinc/cp-ksqldb-server:latest
    container_name: aKsql-server
    hostname: aKsql-server
    ports:
      - 8088:8088
    depends_on:
      - broker-1
      - broker-2
      - broker-3
#      - broker-4
      - kafka-connect
      - schema-registry
    networks:
      - kafka-net
    environment:
      KSQL_BOOTSTRAP_SERVERS: broker-2:29092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SERVICE_ID: confluent_rmoff_01
      KSQL_CUB_KAFKA_TIMEOUT: 300
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # -v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v
      # Useful settings for development/laptop use - modify as needed for Prod
      KSQL_KSQL_COMMIT_INTERVAL_MS: 2000
      KSQL_KSQL_SINK_PARTITIONS: 1
      KSQL_KSQL_CACHE_MAX_BYTES_BUFFERING: 10000000
      KSQL_KSQL_STREAMS_AUTO_OFFSET_RESET: earliest
      # -v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v
      # aProducer Confluent Monitoring Interceptors for Control Center aStreams monitoring
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KSQL_KSQL_EXTENSION_DIR: "/etc/aKsql/ext"
    volumes:
      - ./scripts:/scripts
      - ./ext:/etc/aKsql/ext

  ksql-cli:
    image: confluentinc/cp-ksqldb-cli:latest
    container_name: aKsql-cli
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - ksql-server
    networks:
      - kafka-net
    volumes:
      - ./user_profile_pretty.aKsql:/user_profile_pretty.aKsql
    entrypoint: /bin/sh
    tty: true

#  kafkacat:
#    image: confluentinc/cp-kafkacat:latest
#    container_name: kafkacat
#    depends_on:
#      - broker-1
#      - broker-2
#      - broker-3
##      - broker-4
#    entrypoint: sleep infinity
#    networks:
#      - kafka-net

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-aConnect
    hostname: kafka-aConnect
    depends_on:
      - zookeeper
      - broker-1
      - broker-2
      - broker-3
#      - broker-4
      - schema-registry
    ports:
      - 8083:8083
    networks:
      - kafka-net
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker-2:29092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-aConnect
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:32181
      CONNECT_CONFIG_STORAGE_TOPIC: docker-kafka-aConnect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-kafka-aConnect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-kafka-aConnect-status
      CONNECT_KEY_CONVERTER: io.confluent.aConnect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.aConnect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.aConnect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.aConnect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-aConnect
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.aConnect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: /usr/share/java
      # Interceptor config
    volumes:
      - ./confluentinc-kafka-aConnect-mqtt:/usr/share/java/confluentinc-kafka-aConnect-mqtt

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    container_name: control-center
    hostname: control-center
    depends_on:
      - zookeeper
      - broker-1
      - broker-2
      - broker-3
#      - broker-4
      - schema-registry
      - kafka-connect
      - ksql-server
    ports:
      - 9021:9021
    networks:
      - kafka-net
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: broker-2:29092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:32181
      CONTROL_CENTER_CONNECT_DEBEZIUM-SOURCE_CLUSTER: http://connect-debezium:8084
      CONTROL_CENTER_CONNECT_ELASTIC-SINKS_CLUSTER: http://kafka-connect:8083
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # The advertised URL needs to be the URL on which the browser
      #  can access the KSQL server (e.g. http://localhost:8088/info)
      CONTROL_CENTER_KSQL_URL: http://ksql-server:8088
      CONTROL_CENTER_KSQL_ADVERTISED_URL: http://localhost:8088
      # -v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v
      # Useful settings for development/laptop use - modify as needed for Prod
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
      CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 104857600
    command:
      - bash
      - -c
      - |
        echo "Waiting two minutes for Kafka brokers to start and 
               necessary topics to be available"
        sleep 120  
        /etc/confluent/docker/run


  rest-proxy:
    image: confluentinc/cp-kafka-rest:latest
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      #- broker-4
      - schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    networks:
      - kafka-net
    environment:
      #KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: broker-2:29092
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082

networks:
  kafka-net:
    driver: bridge
